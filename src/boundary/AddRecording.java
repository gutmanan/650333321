/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundary;

import businessLogic.AddRecordingControl;
import businessLogic.CreateStudioControl;
import java.util.ArrayList;
import businessLogic.StudioRatesControl;
import businessLogic.WindowManager;
import entity.E_CITIES;
import entity.E_STATUS;
import entity.Freelancer;
import entity.RatingBar;
import entity.RatingBarCell;
import entity.Record;
import entity.Session;
import entity.Studio;
import entity.StudiosFreelancers;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.hsqldb.lib.HashMap;

/**
 *
 * @author Shai Gutman
 */
public class AddRecording extends javax.swing.JPanel {

    public AddRecording() {
        if (WindowManager.getTmpArtist() == null) {
            return;
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusComboBox = new javax.swing.JComboBox<>();
        recordingComboBox = new javax.swing.JComboBox<>();
        studioNameLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        youtubeTextField = new javax.swing.JTextField();
        youtubeLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lyricTextField = new javax.swing.JTextField();
        lyricLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lengthTextField = new javax.swing.JTextField();
        lengthLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        titleLabel1 = new javax.swing.JLabel();
        zipLabel = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        titleTextField1 = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        recordingIDField = new javax.swing.JTextField();
        sessionsComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        usernameLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        wallpaper = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(null);

        statusComboBox.addItem("Select Status");
        for (E_STATUS s : E_STATUS.values())
        statusComboBox.addItem(s.toString());
        statusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusComboBoxActionPerformed(evt);
            }
        });
        add(statusComboBox);
        statusComboBox.setBounds(150, 290, 140, 30);

        recordingComboBox.addItem("Select Recording");
        recordingComboBox.setVisible(false);
        recordingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordingComboBoxActionPerformed(evt);
            }
        });
        add(recordingComboBox);
        recordingComboBox.setBounds(230, 190, 150, 30);

        studioNameLabel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        studioNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        studioNameLabel.setText("Session number:");
        add(studioNameLabel);
        studioNameLabel.setBounds(60, 90, 130, 20);

        jLabel15.setVisible(false);
        jLabel15.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Previous recording:");
        add(jLabel15);
        jLabel15.setBounds(470, 270, 340, 20);
        add(youtubeTextField);
        youtubeTextField.setBounds(160, 430, 140, 30);

        youtubeLabel.setForeground(new java.awt.Color(0, 0, 0));
        youtubeLabel.setText("Youtube URL:");
        add(youtubeLabel);
        youtubeLabel.setBounds(70, 430, 80, 30);

        jLabel11.setVisible(false);
        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("About previous recording:");
        add(jLabel11);
        jLabel11.setBounds(470, 190, 200, 20);

        jLabel12.setVisible(false);
        jLabel12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Title:");
        add(jLabel12);
        jLabel12.setBounds(470, 210, 340, 20);
        add(lyricTextField);
        lyricTextField.setBounds(160, 390, 140, 30);

        lyricLabel.setForeground(new java.awt.Color(0, 0, 0));
        lyricLabel.setText("Lyrics URL:");
        add(lyricLabel);
        lyricLabel.setBounds(70, 390, 80, 30);

        jLabel13.setVisible(false);
        jLabel13.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Status:");
        add(jLabel13);
        jLabel13.setBounds(470, 230, 340, 20);

        jLabel14.setVisible(false);
        jLabel14.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Length:");
        add(jLabel14);
        jLabel14.setBounds(470, 250, 340, 20);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("About session:");
        add(jLabel7);
        jLabel7.setBounds(470, 90, 150, 20);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Date:");
        add(jLabel8);
        jLabel8.setBounds(470, 110, 340, 20);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Start time:");
        add(jLabel9);
        jLabel9.setBounds(470, 130, 340, 20);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Umtil:");
        add(jLabel10);
        jLabel10.setBounds(470, 150, 340, 20);
        add(lengthTextField);
        lengthTextField.setBounds(150, 330, 140, 30);

        lengthLabel.setForeground(new java.awt.Color(0, 0, 0));
        lengthLabel.setText("Length:");
        add(lengthLabel);
        lengthLabel.setBounds(70, 330, 80, 30);

        statusLabel.setForeground(new java.awt.Color(0, 0, 0));
        statusLabel.setText("Status:");
        add(statusLabel);
        statusLabel.setBounds(70, 290, 80, 30);

        titleLabel1.setForeground(new java.awt.Color(0, 0, 0));
        titleLabel1.setText("Title:");
        add(titleLabel1);
        titleLabel1.setBounds(70, 250, 80, 30);

        zipLabel.setForeground(new java.awt.Color(0, 0, 0));
        zipLabel.setText("ZIP file content:");
        add(zipLabel);
        zipLabel.setBounds(370, 310, 140, 30);

        uploadButton.setText("Add to ZIP");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });
        add(uploadButton);
        uploadButton.setBounds(620, 310, 120, 26);
        add(titleTextField1);
        titleTextField1.setBounds(150, 250, 140, 30);

        updateButton.setText("Add");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        add(updateButton);
        updateButton.setBounds(160, 520, 140, 26);

        recordingIDField.setEditable(false);
        recordingIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordingIDFieldActionPerformed(evt);
            }
        });
        recordingIDField.setText(UUID.randomUUID().toString().substring(0, 7));
        add(recordingIDField);
        recordingIDField.setBounds(140, 140, 120, 30);

        sessionsComboBox.addItem("Select Sessiom");
        for (Session s : AddRecordingControl.getSessions(WindowManager.getTmpArtist().getAlphaCode()))
        sessionsComboBox.addItem(String.valueOf(s.getSessionID()));
        sessionsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionsComboBoxActionPerformed(evt);
            }
        });
        add(sessionsComboBox);
        sessionsComboBox.setBounds(200, 80, 180, 30);

        jList1.setModel(new DefaultListModel<String>());
        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1);
        jScrollPane1.setBounds(370, 350, 370, 150);

        jCheckBox1.setText(" Continuous recording");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        add(jCheckBox1);
        jCheckBox1.setBounds(60, 190, 170, 30);

        usernameLabel.setText("UUID:");
        add(usernameLabel);
        usernameLabel.setBounds(60, 140, 90, 30);

        titleLabel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 0, 0));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Add Recording");
        add(titleLabel);
        titleLabel.setBounds(0, 10, 850, 40);

        wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/container3.png"))); // NOI18N
        add(wallpaper);
        wallpaper.setBounds(0, 0, 850, 580);
    }// </editor-fold>//GEN-END:initComponents

    private void recordingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordingComboBoxActionPerformed
        if (recordingComboBox.getSelectedIndex() == 0 || !jCheckBox1.isSelected()) {
            return;
        }
        jLabel12.setText("Title:");
        jLabel13.setText("Status:");
        jLabel14.setText("Length:");
        jLabel15.setText("Previous recording:");
        Record tmpRecord = null;
        Integer session = Integer.valueOf(String.valueOf(sessionsComboBox.getSelectedItem()));
        for (Record s : AddRecordingControl.getSessionRecords(WindowManager.getTmpArtist().getAlphaCode(), session)) {
            if (s.getAlphaCode().equals(String.valueOf(recordingComboBox.getSelectedItem()))) {
                tmpRecord = s;
            }
        }
        jLabel11.setVisible(true);
        jLabel12.setVisible(true);
        jLabel13.setVisible(true);
        jLabel14.setVisible(true);
        jLabel15.setVisible(true);
        jLabel12.setText(jLabel12.getText()+" "+tmpRecord.getTitle());
        jLabel13.setText(jLabel13.getText()+" "+tmpRecord.getStatus().toString());
        jLabel14.setText(jLabel14.getText()+" "+tmpRecord.getLength());
        jLabel15.setText(jLabel15.getText()+" "+tmpRecord.getPrevRecord());
    }//GEN-LAST:event_recordingComboBoxActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        
        if (AddRecordingControl.inseretNewRecording(recordingIDField.getText(), titleTextField1.getText(), String.valueOf(statusComboBox.getSelectedItem()), 
                lyricTextField.getText(), lengthTextField.getText(), youtubeTextField.getText(), jList1.getModel().getSize()>0?jList1.getModel().getElementAt(0):" ", 
                String.valueOf(recordingComboBox.getSelectedItem()), String.valueOf(sessionsComboBox.getSelectedItem()))) {
            WindowManager.openWin(new AddRecording());
            return;
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void recordingIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordingIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordingIDFieldActionPerformed

    private void sessionsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionsComboBoxActionPerformed
        if (sessionsComboBox.getSelectedItem() == null || sessionsComboBox.getSelectedIndex() == 0) {
            return;
        }
        recordingComboBox.removeAllItems();
        recordingComboBox.addItem("Select Recording");
        jLabel8.setText("Date:");
        jLabel9.setText("Start time:");
        jLabel10.setText("Until:");
        Session tmpSessiom = null;
        for (Session s : AddRecordingControl.getSessions(WindowManager.getTmpArtist().getAlphaCode())) {
            if (String.valueOf(s.getSessionID()).equals(String.valueOf(sessionsComboBox.getSelectedItem()))) {
                tmpSessiom = s;
            }
        }
        jLabel8.setText(jLabel8.getText()+" "+tmpSessiom.getSessionDate().toGMTString().substring(0, 11));
        jLabel9.setText(jLabel9.getText()+" "+tmpSessiom.getStartTime());
        jLabel10.setText(jLabel10.getText()+" "+tmpSessiom.getEndTime());
    }//GEN-LAST:event_sessionsComboBoxActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        if (jCheckBox1.isSelected()) {
            recordingComboBox.setVisible(true);
        } else recordingComboBox.setVisible(false);   
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (sessionsComboBox.getSelectedIndex() == 0 || !jCheckBox1.isSelected()) {
            return;
        }
        Integer session = Integer.valueOf(String.valueOf(sessionsComboBox.getSelectedItem()));
        for (Record s : AddRecordingControl.getSessionRecords(WindowManager.getTmpArtist().getAlphaCode(), session)) {
            recordingComboBox.addItem(s.getAlphaCode());
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void statusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusComboBoxActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File chosen = chooser.getSelectedFile();
        if (chosen == null)
        return;
        String filename = chosen.getAbsolutePath();
        BufferedImage image = null;
        try {
            image = ImageIO.read(chosen);
        } catch (IOException ex) {
            Logger.getLogger(MainLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        ((DefaultListModel)jList1.getModel()).addElement(filename);
    }//GEN-LAST:event_uploadButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JLabel lyricLabel;
    private javax.swing.JTextField lyricTextField;
    private javax.swing.JComboBox<String> recordingComboBox;
    private javax.swing.JTextField recordingIDField;
    private javax.swing.JComboBox<String> sessionsComboBox;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel studioNameLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JTextField titleTextField1;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton uploadButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel wallpaper;
    private javax.swing.JLabel youtubeLabel;
    private javax.swing.JTextField youtubeTextField;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables

}
